import React, {useEffect} from 'react'
import Svg,{Path} from 'react-native-svg'
import {Dimensions} from "react-native";
import Animated, {Easing, useSharedValue, withDelay, withRepeat, withTiming} from "react-native-reanimated";
import AnimatedPath from './animated-path'
const paths = [
    "M4.06336 153.05V125.75L124.813 125.96C130.973 125.96 135.663 124.56 138.883 121.76C142.243 118.82 143.923 114.13 143.923 107.69C143.923 101.25 142.243 96.63 138.883 93.83C135.663 90.89 130.973 89.42 124.813 89.42H49.6334C34.0934 89.42 21.9834 85.71 13.3034 78.29C4.76336 70.73 0.493362 59.67 0.493362 45.11C0.493362 30.55 4.76336 19.56 13.3034 12.14C21.9834 4.58 34.0934 0.799995 49.6334 0.799995H167.653V28.1L53.2034 27.89C47.1834 27.89 42.4934 29.29 39.1334 32.09C35.7734 34.75 34.0934 39.09 34.0934 45.11C34.0934 51.13 35.7734 55.54 39.1334 58.34C42.4934 61 47.1834 62.33 53.2034 62.33H128.383C143.923 62.33 155.963 66.18 164.503 73.88C173.183 81.44 177.523 92.71 177.523 107.69C177.523 122.53 173.183 133.8 164.503 141.5C155.963 149.2 143.923 153.05 128.383 153.05H4.06336Z",
    "M195.441 152V43.85H225.891V152H195.441ZM195.231 26V2.26999H226.101V26H195.231Z",
    "M248.966 152V1.84999H279.416V152H248.966Z",
    "M338.611 152L293.041 43.85H324.961L360.241 127.64H370.741L406.021 43.85H437.941L392.371 152H338.611Z",
    "M504.972 153.05C486.212 153.05 471.582 148.43 461.082 139.19C450.582 129.81 445.332 116.09 445.332 98.03C445.332 79.83 450.582 66.11 461.082 56.87C471.582 47.49 486.212 42.8 504.972 42.8H557.472C569.792 42.8 579.172 45.74 585.612 51.62C592.192 57.36 595.482 65.62 595.482 76.4C595.482 98.38 582.812 109.37 557.472 109.37H478.092C481.032 122.39 489.992 128.9 504.972 128.9H590.022V153.05H504.972ZM504.972 66.95C490.552 66.95 481.662 73.04 478.302 85.22H556.002C558.802 85.22 560.972 84.38 562.512 82.7C564.192 81.02 565.032 78.71 565.032 75.77C565.032 69.89 562.022 66.95 556.002 66.95H504.972Z",
    "M614.415 152V43.85H697.155C709.335 43.85 718.295 46.93 724.035 53.09C729.775 59.11 732.645 67.09 732.645 77.03V99.5H701.775V80.81C701.775 72.41 697.575 68.21 689.175 68.21H645.285V152H614.415Z",
    "M104.87 404V254.27L231.29 253.85C247.95 253.85 260.27 257.35 268.25 264.35C276.37 271.21 280.43 281.57 280.43 295.43C280.43 309.29 275.81 319.44 266.57 325.88C272.73 329.24 277.28 333.72 280.22 339.32C283.16 344.78 284.63 351.85 284.63 360.53C284.63 374.67 280.57 385.45 272.45 392.87C264.47 400.15 252.15 403.79 235.49 403.79L104.87 404ZM227.3 280.73H138.47V314.33H227.3C240.04 314.33 246.41 308.59 246.41 297.11C246.41 286.19 240.04 280.73 227.3 280.73ZM231.5 341.21H138.47V376.91H231.5C244.24 376.91 250.61 370.89 250.61 358.85C250.61 347.09 244.24 341.21 231.5 341.21Z",
    "M304.542 404V295.85H334.992V404H304.542ZM304.332 278V254.27H335.202V278H304.332Z",
    "M358.068 404V295.85H440.808C452.988 295.85 461.948 298.93 467.688 305.09C473.428 311.11 476.298 319.09 476.298 329.03V351.5H445.428V332.81C445.428 324.41 441.228 320.21 432.828 320.21H388.938V404H358.068Z",
    "M630.251 404V253.85H599.801V404H630.251ZM625.001 404V379.85H552.551C543.451 379.85 536.451 377.4 531.551 372.5C526.791 367.46 524.411 359.97 524.411 350.03C524.411 339.95 526.791 332.46 531.551 327.56C536.451 322.52 543.451 320 552.551 320H622.901V295.85H552.551C533.791 295.85 519.161 300.47 508.661 309.71C498.161 318.95 492.911 332.39 492.911 350.03C492.911 367.53 498.161 380.9 508.661 390.14C519.161 399.38 533.791 404 552.551 404H625.001Z",
]
const MARGIN = 10;
const vWidth = 733 + MARGIN;
const vHeight = 404 + MARGIN;
const width = Dimensions.get('window').width - 20;
const height = (width * vHeight) / vWidth

const StrokeAnimation:React.FC<{}>=()=>{
    const progress:Animated.SharedValue<number> = useSharedValue<number>(0)
    const opacity = useSharedValue(0)
    useEffect(() => {
        progress.value = withRepeat(withTiming(1, {duration: 4000, easing: Easing.linear}),-1,true)
        opacity.value = withRepeat(withDelay(3000,withTiming(1,{duration: 4000})),-1,true)

    }, []);

    return(
        <Svg width={width} height={height} viewBox={[-MARGIN, -MARGIN, vWidth + MARGIN, vHeight + MARGIN].join(' ')}>
            {paths.map((path,index)=>{
                return (
                    <AnimatedPath

                        key={index}
                        index={index}
                        strokeWidth={10}
                        progress={progress}
                        opacity={opacity}
                        d={path}
                    />
                )
            })}
        </Svg>

    )
}
export default StrokeAnimation
